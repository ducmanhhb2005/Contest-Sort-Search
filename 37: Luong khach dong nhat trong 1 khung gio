Cách 1: Tầm O(10^14)
import java.util.*;
public class Main
{
    
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
		for (int i=0; i<n; i++){
		    int a=sc.nextInt();
		    int b=sc.nextInt();
		    for (int j = a; j <= b; j++){
		      if (map.containsKey(j)){
		          int x=map.get(j);
		          x++;
		          map.put(j,x);
		      }
		      else map.put(j,1);
		    }
		    }
	    Set<Map.Entry<Integer,Integer>> set=map.entrySet();
	    int max=-(int)1e9;
	    
	    for (Map.Entry<Integer,Integer> x: set){
	        if (max<x.getValue()){
	            max=x.getValue();
	            
	        }
	    }
	    System.out.print(max);
		
	}
}
Cách 2: Phân theo thời gian biểu trong ngày 
import java.util.*;
public class Main
{
    
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
	    Integer[][] a=new Integer[n*2][2];
	    for (int i=0; i<2*n;i+=2){
	        a[i][0]=sc.nextInt();
	        a[i][1]=1;
	        a[i+1][0]=sc.nextInt();
	        a[i+1][1]=-1;
	    }
	    Arrays.sort(a, new Comparator<Integer[]>(){
	        public int compare(Integer[] o1, Integer[] o2){
	            return o1[0]-o2[0];
	        }
	    });
	    int current=0;
	    int max=-(int)1e9;
	    for (int i=0; i<2*n; i++){
	        current+=a[i][1];
	        max=Math.max(max,current);
	    }
	    System.out.print(max);
	}
}

